/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'cranfoj' at '7/18/16 1:09 PM' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile 'junit:junit:4.12'

    // Copied from: http://testng.org/doc/download.html
    testCompile 'org.testng:testng:6.9.12'
}

test {
  useTestNG()
  include '**/**'
  testLogging.showStandardStreams = true
  minHeapSize = "128m"
  maxHeapSize = "512m"
  jvmArgs '-XX:MaxPermSize=256m'

  beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
  }

  onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
  }
}